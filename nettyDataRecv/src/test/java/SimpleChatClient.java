import com.shm.metro.util.Util;
import io.netty.bootstrap.Bootstrap;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.*;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.socket.SocketChannel;
import io.netty.channel.socket.nio.NioSocketChannel;
import io.netty.handler.codec.string.StringEncoder;

/**
 * Created by Administrator on 2023/7/4.
 */
public class SimpleChatClient {

    public static void main(String[] args) {
        new SimpleChatClient("localhost",9090).run();
    }

    private final String host;
    private final int port;

    public SimpleChatClient(String host,int port){
        this.host = host;
        this.port = port;
    }

    public void run(){
        EventLoopGroup eventExecutors = new NioEventLoopGroup();
        try{

            Bootstrap b = new Bootstrap();
            b.group(eventExecutors)
                    .channel(NioSocketChannel.class)

                    .handler(new ChannelInitializer<SocketChannel>() {
                        @Override
                        protected void initChannel(SocketChannel ch) throws Exception {
                            ChannelPipeline pipeline = ch.pipeline();
                            pipeline.addLast("encode",new StringEncoder());
                            //pipeline.addLast("framer",new DelimiterBasedFrameDecoder(8196, Delimiters.lineDelimiter()));
                            //pipeline.addLast("decoder",new StringDecoder());
                            //pipeline.addLast("encoder",new StringEncoder());
                            //pipeline.addLast("handler",new SimpleChatClientHandler());

                        }
                    });

            Channel channel = b.connect(host,port).sync().channel();
            Channel channel1 = b.connect(host,9092).sync().channel();
            int count = 0;
            while (true){

                String content1 = "aaabac00030306000000000000840300015e05000032015008041202059305d2026a5303e86c0000000000111111777700224e4a494b000000000000000000201211111fbebebe7c7c7b190d060000000000005555555505120000000000000000000000000000004058160411111111111111111111111111111111111111111111111111111111111100000000553333333333331100a000a000a000a000a000a0040404040404008e0086008c0089008d00970082008f008f009700900086008e0086008c0089008d00970082008f008f00970090008600b600ab00a900ae00ad00b400aa00af00b100b000b400ac00c500b500b400b400b500be00c500b900b900b500b500b900bd00bd00bf00bc00bb00b300bc00c100c100bd00be00b23f00111111111111111100000000000003aa0000002b000004f8000002d100014d68000151bb015b6c36000000300000000a020f020c020f01a601860187019300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f8fffa4090000270078264df4001a80f0e17fcccccc95390000000000000b00230c0000000000000b60000000000000000000000000070005d203e896642564196413641a0005905d00058a4900059156000590574816ffe5461100e3480f00ea00110301073b3b9845009743009444009d4152008d201c1103010800000000000040babbbc";
                ByteBuf buf = Unpooled.copiedBuffer(Util.hex2Byte(content1));
                channel.writeAndFlush(buf);
                //channel1.write(buf);
                Thread.sleep(1000);

                String content2 = "aaabac0004030400000000000084030001e41200003201b21004220206281d6950125200001000000000001111111111002200000000000000000000000000201211111fbdbebe7a797a0c00160000000000005555555505110000000000000000000000000000004058190411111111111111111111111111111111111111111111111111111111111100000000552233332233331100aa00a800a800a500a600a804040404040400940096009e0090009000930091009500a1009d009c008d00940096009e0090009000930091009500a1009d009c008d00c100bd00be00c000c300c500b900c100c200c900c900bf00b900b100b400bf00c000c000bd00b600b500c300c500bc00b100bf00b900cd00c900b900b200bc00bb00cb00cb00b83f0011111111111111110000000000001227000000000000005d0000002200011de700001729012a790c0000000c0000000103661144046c000d00090008000d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f8ffcfa4090071a7c078224d34007a80f0e17fcccccc0018000000000000211a2705000000000000986000000000000000000000000007001d4200006600050002000000020006233d00061a4300062b4600062e464d2c00a64e2200984e4600a900110301073b3b3e3f00413e00413d003d3b52003f040911030108000000000000c2babbbc";
                ByteBuf buf2 = Unpooled.copiedBuffer(Util.hex2Byte(content2));
                //channel.writeAndFlush(buf2);
                channel1.writeAndFlush(buf2);
                System.out.println(count++);
                //channel.writeAndFlush()
                //break;
            }
            /*BufferedReader in = new BufferedReader(new InputStreamReader(System.in));*/

        }catch (Exception e){
            e.printStackTrace();
        }
        finally {
            eventExecutors.shutdownGracefully();
        }
    }

}
